TODO NOW


0 add authorization to all axios call now like the following example. (maybe only authorize the project page? someone will still be able to break it but it may be ok somehow?)

Then use random number when creating the project id, and use that number instead of the numbers following. 

Only the accepted user will be able to access the content anyway. (for now)

```
    const { data } = await axios.get('http://localhost:1337/whatever', {
      headers: {
        Authorization:
          `Bearer ${getCookie("hc_login_token")}`,
      },
    });
    console.log(data);
```



0. backend: add stories to the users
   user role: author

   each author has multiple stories
   and each story has multiple author

1. create  user? (let’s create the user from the strapi.)
   invitational




2. load user, and load its stories.

3. only show those.

4. upload needs to have the authorizations up and running to be usable to load / create / update


the checking for jwt

Every time you reconnect, it checks the cookie and set it up for another week.





 assets: 

 replace assets with another.
 upload to a plan by handling an image on it.

 dropzone()


copy/move elements from plan to others.
move element to another plan? 


how to se



kkkk




1. update the backend api for the stylesheet
2. automatically create a stylesheet if empty
3. set it!


1. set the stylesheet as object using css.js

1b. when loading the sequence, load up the style element with the active stylesheet.

2. create a stylesheet on load, link it to the sequence

3. fill the sequence everytime an element is clicked / moved

4. create a global json object that contains the stylesheet, 

5 when moving an object, update the stylesheet, push the new stylesheet (the css rule.)

6. change stylesheet, replace the content of the style element with the new stylesheet.

! the style on the object is not used anymore.






 















when creating a project, create a sequence so you dont post when opening the sequence.

TO DO now.


when select another stylesheet deselect everything

on load: load the data from the stylesheet.
on move: load data from the stylesheet.
when changing stylesheet. load data from the stylesheet.

function (updateAllObject  should run every time we change the style sheet as faking responsiveness)




PROBLEM

when you change the location of an object with the ui, and you try to move it, it will reset to the previous location. 
FIX: when running the input, update the data on the screen.


screen size = 

1 screeen size creates a stylesheet
with an id.

everytime you move an element, its styles get saved to the stylesheet
if you open the style sheet, it will add the css rules to every element.

so you don’t save the width / height for each element
but you actually save the styles

and reapply to all elements when you change the screens.

so you don’t need to back up the size / location of element on the fly.





Screen sizes.

when you want to add a screen size, 
add a screen size.
set its width and height
auto fill with the width and height available on screen, and set max or minus
update that screen size system



anchor: top and bottom need to be set separately.


# the screensize includes a css thing that 






## impossible question with the prototype

Use the same image multiple times on the layout? what should we do about it? the way we set up the data makes it impossible as we use strapi link.
How can we do that?

how to manage the css?
the css we wanna save is a bunch of data that belong to the sequence. 
and the lines are created by updating the element.



we want to set the CSS not to the sequence, but to the plan.

So an plan has an item, and that item can be of mutiple type:

> image (and then has a link, a style, etc.)
> text (and then has a text, a sytles, etc.)
> baloon


make an object to manage the multiple size


an object:

each plan has an asset. 
each plan can only save one css
each css is connected to the asset?
should we connect the css to the plan?

Plan to other plan needs to have options (the speed of changing plans for example)

Or is it better to give the css to the plan?
(css to the parent)


THE ROAD FOR THE STYLES
create style sheet when there is a new sequence
put the sequence in a style element, 
add css rules for each move/resize
push the css rules to the cssOM stylesheet.
save that style sheet. 


THE STYLESHEET AND FIX LA TAILLE
Clean the css rules once in a while.

on duplicate plan, duplicate the css rules?
or assume tht they’ll move around



DUPLICATE AN OBJECT: GET then POST the same data but the id.

it will put everyting at the right place
