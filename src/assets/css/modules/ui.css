* {
  user-select: none;
}

.moveable {
  position: fixed;
  border: 2px solid var(--color-body);
  z-index: 400000;
  background: white;
}

.resizable {
  overflow: auto;
  resize: both;
}

button,
#returnhome {
  border: 1px solid var(--color-body);
  background: white;
  padding: 0.2em 1ch;
}

:is(button, #returnhome):hover {
  background: var(--color-main);
  color: white;
}

#homeButtonsList {
  resize: unset;
  padding: 0;
  background: white;
  font-size: 0.7em;
  height: 8em;
  width: max-content;
  left: 10vw;
  top: 20em;
  position: fixed;
  /* top: 1em; */
  /* right: 1em; */
  z-index: 999999998;
  font-size: 0.8em;
  height: max-content;

  & h2 {
    margin: 0;
    & > button {
      position: absolute;
      margin-left: auto;
      font-size: 1em;
      width: 2ch;
      right: 1ch;
      top: 0.1em;
      text-align: center;
      background: unset;
      color: white;
      cursor: pointer;
      &:hover {
        color: white;
        background: unset;
        font-weight: 800;
      }
    }
  }
  & button {
    border: none;
    margin: 0;
    text-decoration: none;
    display: block;
    text-transform: uppercase;
    font-weight: 400;
    width: 100%;
    text-align: left;
    background: white;

    &:not(:last-of-type) {
      border-bottom: 1px dashed grey;
    }

    /* border: 2px solid black; */
    /* border-bottom: 6px solid black; */
  }
}

.hide {
  display: none !important;
}

.manip input[type="number"] {
  /* border: 0px solid transparent; */
  /* border-bottom: 2px solid black; */
  /* max-width: 10ch; */
  /* display: inline; */
}

.manip label {
}

.manip details {
  margin-bottom: 2em;
}

.manip details summary {
  border-bottom: 1px solid black;
  margin-bottom: 0.5em;
}

.manip details.location div {
  max-width: fit-content;
  margin: auto;
  gap: 0.5em 0.5em;
  display: grid;
  grid-template-columns: [label-start] 8ch [label-end input-start] 1fr [input-end];
}

.manip .location summary {
  grid-column: 1 / -1;
}

.manip .location label {
  grid-column: label;
}

.manip .location input {
  grid-column: input;
}

.manip .zindex {
  display: flex;
}

.manip details {
  padding: 0 3ch;
}

.manip details {
  cursor: pointer;
  text-transform: uppercase;
  font-weight: 500;
}

.manip .zindex button {
  display: inline;
  width: 30px;
}

.toDrag {
  box-shadow: 0 0 0 5px #eee;
}

/* ui in blocks */

.block-ui {
  overflow-y: auto;
  max-height: 80vh;

  & > div {
    padding: 1em 2ch;
  }

  & ul {
    /* margin: 4em 0; */
    padding: 0;
  }

  button {
    background: #ccc;
    font-weight: 600;
    text-transform: uppercase;
    font-size: 0.8em;
    margin: auto;
  }

  h2 {
    background: black;
    font-size: 0.8em;
    letter-spacing: 0.2ch;
    text-transform: uppercase;
    color: white;
    margin-bottom: 1em;
    padding: 0.3em 2ch;
    position: sticky;
    top: 0;
    & button {
      position: absolute;
      right: 0;
      color: white;
      background: transparent;
      border: none;
    }
  }

  & h3 {
    text-transform: uppercase;
    margin-top: 1em;
    margin-bottom: 0.5em;
    font-weight: 400;
  }

  & li.header {
    font-weight: 800;
    margin-bottom: 0.3em;
  }
}
/* /css changes */

#styleWrapper {
  display: block;
  position: fixed;
  top: 2em;
  left: 2em;
  max-height: 80vh;
  width: 50ch;
  background: lightgrey;
  font-size: 0.8em;
  font-family: monospace;
}

#styleWrapper style {
  /* position: absolute; */
  white-space: pre-wrap;
  width: 100%;
  display: block;
  /* background: #cccd; */
  border-bottom: 2px solid white;
  padding: 0.5em 0;
}

#styleWrapper style.activatedStyle {
  background: white;
}

.closeTo {
  background: lightgrey;
}

#styleWrapper {
}

#styleWrapper style:hover::after {
  content: attr(id);
  color: white;
  background: grey;
}

#contextualUI > section {
  margin: 0 2ch 1em;
}
#contextualUI .block {
  display: grid;
  grid-template-rows: repeat(3, 10ch);
  grid-template-columns: repeat(3, 10ch);
  gap: 0.5em 2ch;

  /* grid-template-areas: ". top . ", "left block right", ". bottom ."; */
}

#contextualUI input {
  max-width: 10ch;
  display: block;
  border: 0;
  border-bottom: 3px solid grey;
}

.input-left {
  grid-area: left;
  grid-row: 2;
  grid-column: 1;
  justify-self: end;
}

.input-right {
  grid-area: right;
  grid-row: 2;
  grid-column: 3;
}

.input-top {
  grid-row: 1;
  grid-column: 2;
  align-items: end;
}

.input-bottom {
  grid-row: 3;
  grid-column: 2;
}

#input-element {
  grid-row: 2;
  grid-column: 2;
  background: lightgrey;
  width: 100%;
  height: 100%;
  display: block;
}

/*show the contextual id only if an element is selected.*/

#contextualUI {
  visibility: hidden;
}

:has(.asset-selected) #contextualUI {
  visibility: visible;
}

#selectedId {
  display: none;
}

:has(.asset-selected) #selectedId {
  display: block;
}

:root {
  --hidden-opacity: 0.01;
}

.asset-selected .asset-selected:hover {
  --hidden-opacity: 0.9;
}

/*visibility when active*/

#deselectAsset {
  display: none;
  /* position: fixed; */
  /* margin-top: max-content; */
  /* background: var(--color-main); */
  /* text-transform: uppercase; */
  /* height: 2em; */
  /* z-index: 999999999; */
}

&:has(.asset-selected) #deselectAsset {
  display: block;
}

/* // css to show the grid at some point */
#preview #previewScreen.show-grid {
  --grid-size: 10%;
  background-image: linear-gradient(
      to right,
      rgb(0, 0, 0, 0.3) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgb(0, 0, 0, 0.3) 1px, transparent 1px);
  background-size: var(--grid-size) var(--grid-size);
  /* creates 10 rows and 10 columns */
}

.meta > span {
  display: block;
}

/*all dialog*/
dialog {
  & form {
    display: block;

    & input {
      display: block;

      margin-bottom: 2em;
    }
  }

  p {
    margin-top: 2em;
  }
}

::backdrop {
  background: #333333cc;
}

/* custom dialog */
#login[open] {
  max-width: 80ch;
  gap: 2em;
  padding: 2em 4ch;

  & .introtext {
    margin-bottom: 5em;
    max-width: 40ch;
  }
  & input {
    width: 100%;
  }
}

#returnhome {
  font-size: 0.8em;
  position: fixed;
  top: 1em;
  right: 1em;
  text-decoration: none;
  text-transform: uppercase;
}

.active-menu {
  color: orange;
}

#show-tools {
  font-size: 0.8em;
  text-transform: uppercase;
  position: fixed;
  top: 1em;
  left: 1em;
}

label {
  font-family: var(--font-ui);
}

input:is([type="text"], [type="password"]) {
  font-family: var(--font-interface);
  border: none;
  border-bottom: 2px dotted var(--color-body);
  color: var(--color-main);
}

#delay-tools {
  background: white;
  padding: 0.5em 2ch;
  border: 2px solid var(--color-body);
  border-radius: 32px;
  margin-left: auto;
  & input {
    border: none;
    border-bottom: 1px solid grey;
    color: var(--color-main);
    max-width: 9ch;
  }
}

#delaytest {
  --delay-value: 100ms;
  background: black;
  animation: showdelay var(--delay-value);
  width: 20px;
  height: 20px;
  display: inline-block;
  position: relative;
  top: 5px;
}

@keyframes showdelay {
  0% {
    background: white;
  }
  99% {
    background: white;
  }
  100% {
    background: black;
  }
}

/*if there is no object selected, hide the object panel*/
/* body :not(:has(.asset-selected)) #showContextual { */
/* display: none; */
/* } */
